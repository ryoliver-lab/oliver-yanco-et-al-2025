---
title: "plot-figure2"
format: 
  html:
    self-contained: true
    code-fold: false
    code-tools: true
    code-summary: "Show code"
execute:
  warning: false
  message: false
  echo: true
---

Plot figure 2 and report statistics for manuscript. This qmd duplicates the code in `plot-figure2.R`.

```{r}
library(tidyverse)
library(ggplot2)
library(patchwork)
library(ggh4x)
library(here)
library(systemfonts)

rm(list = ls())
```

Model results

```{r}
# create function to data wrangle model results
read_model_results <- function(file_name, response){
  results <- read_csv(here::here("covid-results",file_name)) %>%
    mutate(response = rep(response, nrow(.))) %>%
    select(species, Estimate, LCL, HCL, sig_code, response)
}

# read in model results
area_ghm <- read_model_results("area_ghm_effects_2025-06-24.csv", "area_ghm")
area_sg <- read_model_results("area_sg_effects_2025-06-24.csv", "area_sg")
niche_ghm <- read_model_results("niche_ghm_effects_2025-06-24.csv", "niche_ghm")
niche_sg <- read_model_results("niche_sg_effects_2025-06-24.csv", "niche_sg")

### species list + taxonomy
# read in species list
species_list <- read_csv(here("src","species_list.csv"))
# update taxa name for species to plot on different scale
species_list$taxa[species_list$scientific_name== "Puma concolor"] <- "cougar"
species_list$taxa[species_list$scientific_name== "Procyon lotor"] <- "raccoon" # new
species_list$taxa[species_list$scientific_name== "Numenius americanus"] <- "curlew"

# combine model results and join with species info
results <- rbind(area_ghm, area_sg, niche_ghm, niche_sg) %>%
  left_join(., species_list, by = c("species" = "scientific_name"))

# sort species by effect size of human mobility on area size
mobility_order <- results %>%
  filter(response == "area_sg") %>%
  select(species, taxa, Estimate) %>%
  group_by(taxa) %>%
  arrange(Estimate, .by_group = TRUE) %>%
  distinct(species) %>%
  mutate("order" = seq(1:n())+1) %>%
  ungroup() %>%
  select(species, order)

results <- left_join(results, mobility_order, by = "species") 

# reorder factor levels for plotting
results$response <- factor(results$response,
                           levels = c("area_sg", "niche_sg", "area_ghm", "niche_ghm"))
results$taxa <- factor(results$taxa,
                       levels = c("mammals","cougar","raccoon","birds","curlew"))
```

Plot fig 2a

```{r}
x_label <- "Effect size"

p <- ggplot(results) +
  ggh4x::facet_grid2(taxa~response, scales = "free", independent = "x", space = "free") +
  geom_segment(
    aes(x = LCL, y = reorder(common_name, -order), 
        xend = HCL,yend = reorder(common_name, -order),
        group = sig_code,
        color = sig_code),
    size = 2.5,
    alpha = 0.3,
    lineend = "round") +
  geom_point(aes(x = Estimate, y = reorder(common_name, -order), 
                 color = sig_code,
                 group = sig_code), 
             size = 2) +
  scale_color_manual(name ="model structure",
                     values = c("#fcaf58ff","#9a7aa0ff","#aeb6bf","#79B473")) +
  # bold species names with at least one significant effect
  scale_y_discrete(labels=c("Cougar"=expression(bold(Cougar)),
                            "Bobcat"=expression(bold(Bobcat)),
                            "Coyote"=expression(bold(Coyote)),
                            "Moose"=expression(bold(Moose)),
                            "Elk"=expression(bold(Elk)),
                            "Mule deer"=expression(bold("Mule deer")),
                            "White-tailed deer"=expression(bold("White-tailed deer")),
                            "Pronghorn"=expression(bold(Pronghorn)),
                            "Bighorn sheep"=expression(bold("Bighorn sheep")),
                            "Black bear"=expression(bold("Black bear")),
                            "Grey wolf"=expression(bold("Grey wolf")),
                            "Long-billed curlew"=expression(bold("Long-billed curlew")),
                            "Blue-winged teal"=expression(bold("Blue-winged teal")),
                            "Great egret"=expression(bold("Great egret")),
                            "Wild turkey"=expression(bold("Wild turkey")),
                            "Northern pintail"=expression(bold("Northern pintail")),
                            "Northern shoveler"=expression(bold("Northern shoveler")),
                            "Ross's goose"=expression(bold("Ross's goose")),
                            "GWF goose"=expression(bold("GWF goose")),
                            "Black vulture"=expression(bold("Black vulture")),
                            "Sandhill crane"=expression(bold("Sandhill crane")),
                            "Northern harrier"=expression(bold("Northern harrier")),
                            "Common raven"=expression(bold("Common raven")),
                            "Green-winged teal"=expression(bold("Green-winged teal")),
                            "American wigeon"=expression(bold("American wigeon")),
                            "Cinnamon teal"=expression(bold("Cinnamon teal")),
                            "Snow goose"=expression(bold("Snow goose")),
                            "Turkey vulture"=expression(bold("Turkey vulture")),
                            "Gadwall"=expression(bold(Gadwall)),
                            "Bald eagle"=expression(bold("Bald eagle")),
                            "Mallard"=expression(bold(Mallard)),
                            "American goshawk"=expression(bold("American goshawk")),
                             parse=TRUE)) +
  
  xlab(x_label) +
  theme_minimal(base_family = "Helvetica") +
  theme(panel.border = element_rect(colour = "#aeb6bf", fill=NA, size=1),
        legend.position = "none",
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.text = element_text(size = 7, family = "Helvetica"),
        axis.title.y = element_blank(),
        axis.title.x = element_text(size = 7),
        axis.ticks.x = element_line(color = "#4a4e4d"),
        text = element_text(size = 7, family = "Helvetica")) +
  geom_vline(aes(xintercept = 0), linetype = "solid", size = 0.5, alpha = 0.8, color = "black") +
  theme(strip.text = element_blank(),
        panel.spacing.x = unit(0.5, "lines"),
        panel.spacing.y = unit(0.2, "lines"))

# export figure 2a
ggsave(p, file = here::here("figures", "fig2a.pdf"), width = 184, height = 120, units = "mm")

```

Plot fig2c: types of responses

- includes species with no responses, 1 response, or both 
- response to area & niche. Group data for each category by driver (mobility or modification)
- and species, then summarize quantity of species that fit into the 0, 1, or 2 response categories.
- Further subset the 1 response category to niche-only or area-only for a total of 4 categories

```{r}
# subset results to species with either high_int or sig_add (a response to a driver)
results_clean <- results %>%
  mutate(driver = ifelse(response %in% c("area_sg", "niche_sg"), "mobility", "modification"),
         response = case_when(response == "area_sg" ~ "area size",
                              response == "area_ghm" ~ "area size",
                              response == "niche_sg" ~ "niche size",
                              response == "niche_ghm" ~ "niche size")) %>%
  filter(!sig_code %in% c("low_int", "ns_add"))

# species that don't show responses in area OR niche size
species_no_responses <- results %>%
  mutate(driver = ifelse(response %in% c("area_sg", "niche_sg"), "mobility", "modification"),
         response = case_when(response == "area_sg" ~ "area size",
                              response == "area_ghm" ~ "area size",
                              response == "niche_sg" ~ "niche size",
                              response == "niche_ghm" ~ "niche size")) %>%
  filter(sig_code == "ns_add") %>%
  group_by(driver, species) %>%
  summarise(n_responses = n()) %>%
  filter(n_responses > 1)

# count number of species that sdon't show responses in area OR niche size per driver
summarize_species_no_responses <- species_no_responses %>%
  group_by(driver) %>%
  summarise(n_species = n()) %>%
  mutate(response = rep("none", n()))

# species that show responses in both area AND niche size
species_both_responses <- results_clean %>%
  group_by(driver, species) %>%
  summarise(n_responses = n()) %>%
  filter(n_responses > 1)

# count number of species that show responses in both area AND niche size per driver
summarize_species_both_responses <- species_both_responses %>%
  group_by(driver) %>%
  summarise(n_species = n()) %>%
  mutate(response = rep("both", n()))

# count number of species that respond in either area OR niche size
species_single_response <- results_clean %>%
  group_by(driver, species) %>%
  summarise(n_responses = n()) %>%
  filter(n_responses == 1) 

summarize_species_single_response <- results_clean %>%
  left_join(., species_single_response) %>% 
  filter(!is.na(n_responses)) %>%
  group_by(response, driver) %>%
  summarise(n_species = n())

# combine summaries
summarize_species_drivers <- rbind(summarize_species_both_responses, 
                                   summarize_species_single_response,
                                   summarize_species_no_responses) %>%
  arrange(driver) %>%
  mutate(driver = case_when(driver == "mobility" ~ "human mobility",
                            driver == "modification" ~ "landscape modification"))

summarize_species_drivers$driver <- factor(summarize_species_drivers$driver,
                                           levels = c("landscape modification","human mobility"))

summarize_species_drivers$response <- factor(summarize_species_drivers$response,
                                             levels = c( "none","niche size", "both","area size"))

total_species_drivers <- summarize_species_drivers %>%
  group_by(driver) %>%
  summarise("n_total" = sum(n_species))

summarize_species_drivers <- summarize_species_drivers %>%
  left_join(., total_species_drivers, by = "driver") %>%
  mutate("percent_species" = (n_species/n_total)*100)

p_drivers <- ggplot(summarize_species_drivers, aes(fill=response, y=driver, x=percent_species)) + 
  geom_bar(position="stack", stat="identity") +
  scale_fill_manual(values = c("#726D74","#878188", "#B9B5BA","#DCDCDD")) +
  
  scale_y_discrete(labels = c("human mobility" = "human\npresence",
                              "landscape modification" = "landscape\nmodification")) +
  theme_minimal(base_family = "Helvetica") +
  theme(
    legend.position = "none",
    legend.title = element_text(size = 7, family = "Helvetica"),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.x = element_blank(),
    axis.line.x = element_line(colour = "#4a4e4d", linewidth =0.3, linetype='solid'),
    legend.text = element_text(size = 7, family = "Helvetica"),
    axis.text = element_text(size = 7, family = "Helvetica"),
    #axis.text.y = element_text(face = "bold"),
    axis.title.y = element_blank(),
    axis.title.x = element_text(size = 8),
    axis.ticks.x = element_line(color = "#4a4e4d")) +
  labs(x = "Species (%)")

p_drivers

```

Plot fig2b: drivers of responses

- includes species with no drivers, 1 driver, or both  drivers to area & niche. 
- Group data for each category by driver (mobility or modification) and species,
- then summarize quantity of species that fit into the 0, 1, or 2 response 
- categories. Further subset the 1 response category to niche-only or area-only for a total of 4 categories

```{r}
# count number of species that don't show drivers in area OR niche size per response
species_no_drivers <- results %>%
  mutate(driver = ifelse(response %in% c("area_sg", "niche_sg"), "mobility", "modification"),
         response = case_when(response == "area_sg" ~ "area size",
                              response == "area_ghm" ~ "area size",
                              response == "niche_sg" ~ "niche size",
                              response == "niche_ghm" ~ "niche size")) %>%
  filter(sig_code == "ns_add") %>%
  group_by(response, species) %>%
  summarise(n_drivers = n()) %>%
  filter(n_drivers > 1)

summarize_species_no_drivers <- species_no_drivers %>%
  group_by(response) %>%
  summarise(n_species = n()) %>%
  mutate(driver = rep("none", n()))

# species that show drivers in both area AND niche size
species_both_drivers <- results_clean %>%
  group_by(response, species) %>%
  summarise(n_drivers = n()) %>%
  filter(n_drivers > 1)

# count number of species that show drivers in both area AND niche size per driver
summarize_species_both_drivers <- species_both_drivers %>%
  group_by(response) %>%
  summarise(n_species = n()) %>%
  mutate(driver = rep("both", n()))

# count number of species that respond in either area OR niche size
species_single_driver <- results_clean %>%
  group_by(response, species) %>%
  summarise(n_drivers = n()) %>%
  filter(n_drivers == 1) 

summarize_species_single_driver <- results_clean %>%
  left_join(., species_single_driver) %>% 
  filter(!is.na(n_drivers)) %>%
  group_by(response, driver) %>%
  summarise(n_species = n())

# combine summaries
summarize_species_responses <- rbind(summarize_species_no_drivers,
                                     summarize_species_both_drivers,
                                     summarize_species_single_driver) %>%
  arrange(response) %>%
  mutate(driver = case_when(driver == "mobility" ~ "human mobility",
                            driver == "modification" ~ "landscape modification",
                            driver == "both" ~ "both",
                            driver == "none" ~ "none"))

summarize_species_responses$driver <- factor(summarize_species_responses$driver,
                                             levels = c("none", "landscape modification","both","human mobility"))

summarize_species_responses$response <- factor(summarize_species_responses$response,
                                               levels = c("niche size", "area size"))

total_species_responses <- summarize_species_responses %>%
  group_by(response) %>%
  summarise("n_total" = sum(n_species))

summarize_species_responses <- summarize_species_responses %>%
  left_join(., total_species_responses, by = "response") %>%
  mutate("percent_species" = (n_species/n_total)*100)
            
p_responses <- ggplot(summarize_species_responses, aes(fill=driver, y=response, x=percent_species)) + 
  geom_bar(position="stack", stat="identity") +
  scale_fill_manual(values = c("#726D74","#878188", "#B9B5BA","#DCDCDD")) +
  theme_minimal(base_family = "Helvetica") +
  theme(
    legend.position = "none",
    legend.title = element_text(size = 8),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.x = element_blank(),
    legend.text = element_text(size = 8),
    axis.text = element_text(size = 7),
    #axis.text.y = element_text(face = "bold"),
    axis.title.y = element_blank(),
    axis.title.x = element_text(size = 8),
    axis.line.x = element_line(colour = "#4a4e4d", linewidth =0.3, linetype='solid'),
    axis.ticks.x = element_line(color = "#4a4e4d")) +
  labs(x = "Species (%)")

p_responses

```

Export figures

```{r}
p_all <- p_responses + p_drivers

ggsave(p_all, file = here::here("figures", "fig2b.pdf"), width = 184, height = 30, units = "mm")

summarize_species_responses
summarize_species_drivers
```

Print statements based on % of mammals and birds with sig responses

Define values applied to all statements

```{r}
n_bird_spp <- nrow(species_list %>% filter(taxa %in% c("birds", "curlew")))
n_mammal_spp <- nrow(species_list %>% filter(taxa %in% c("mammals", "raccoon", "cougar")))

# add driver attribute
results <- results %>% 
           mutate(driver = ifelse(response %in% c("area_sg", "niche_sg"), "mobility", "modification"))

results$response <- as.character(results$response)

```

Statement 1: # of species with significant response to human mobility in EITHER area or niche size / total # of species

```{r}
sig_s1_birds <- results %>%
                filter(sig_code %in% c("high_int", "sig_add") & driver == "mobility", # safegraph area OR niche
                       taxa %in% c("birds", "curlew"))

n_sig_s1_birds <- n_distinct(sig_s1_birds$species)

sig_s1_mammals <- results %>%
                  filter(sig_code %in% c("high_int", "sig_add") & driver == "mobility", # safegraph area OR niche
                         taxa %in% c("mammals", "raccoon", "cougar"))

n_sig_s1_mammals <- n_distinct(sig_s1_mammals$species)

s1_all_val <- round((((n_sig_s1_birds + n_sig_s1_mammals) / nrow(species_list)) * 100), 0)
s1_bird_val <- round(((n_sig_s1_birds / n_bird_spp) * 100), 0)
s1_mammal_val <- round(((n_sig_s1_mammals / n_mammal_spp) * 100), 0)

s1_output <- print(paste0("Human presence was associated with changes in area or niche size for ", s1_all_val, "% of all species, ",  s1_mammal_val, "% of the mammal species, and ", s1_bird_val, "% of the bird species studied."))

```

Statement 2: # of species with a significant response to human mobility and landscape modification in EITHER area or niche size / total # of species

```{r}
sig_s2_sg <- results %>%
            filter(sig_code %in% c("high_int", "sig_add"),
                   driver == "mobility") # safegraph area OR niche

sig_s2_ghm <- results %>%
              filter(sig_code %in% c("high_int", "sig_add"),
                     driver == "modification") # GHM area OR niche

# species in common 
n_sig_s2 <- length(intersect(sig_s2_sg$species, sig_s2_ghm$species))

s2_all_val <- round(((n_sig_s2 / nrow(species_list)) * 100), 0)

s2_output <- print(paste0(s2_all_val, "% of species were effected by both human presence and landscape modification."))

```

Statement 2b, breaking up statement 2 into area and niche: # of species with a significant response to human mobility and landscape modification in area, and separately for niche, / total # of species

```{r}
sig_s2b_sg_niche <- results %>%
                    filter(sig_code %in% c("high_int", "sig_add"),
                           response == "niche_sg")

sig_s2b_ghm_niche <- results %>%
                    filter(sig_code %in% c("high_int", "sig_add"),
                           response == "niche_ghm")

sig_s2b_ghm_area <- results %>%
                    filter(sig_code %in% c("high_int", "sig_add"),
                           response == "area_ghm")

sig_s2b_sg_area <- results %>%
                  filter(sig_code %in% c("high_int", "sig_add"),
                         response == "area_sg")

# species in common for sg & area
n_s2b_val_area <- length(intersect(sig_s2b_sg_area$species, sig_s2b_ghm_area$species))
n_s2b_val_niche <- length(intersect(sig_s2b_sg_niche$species, sig_s2b_ghm_niche$species))

perc_s2b_val_area <- round(((n_s2b_val_area / nrow(species_list)) * 100), 0)
perc_s2b_val_niche<- round(((n_s2b_val_niche / nrow(species_list)) * 100), 0)

print(paste0("(Fig. 2b; area size: ", perc_s2b_val_area, "%; niche size: ", perc_s2b_val_niche, "%)"))
```


Statement 3: # of species with any interactive response / # of species that showed any significant response to mobility or modification

```{r}
int <- results %>% 
       filter(sig_code %in% c("high_int", "low_int")) # any interactive response

n_int <- n_distinct(int$species)

sig <- results %>% 
       filter(sig_code %in% c("high_int", "sig_add"))

n_sig <- n_distinct(sig$species)

s3_val <- round(((n_int/n_sig) * 100), 0)

s3_output <- print(paste0("For ", s3_val, "% of species that responded to human activity, the effects of human presence and landscape modification on area or niche size were interactive."))

```

Statement 4: # of mammal species with significant NEGATIVE response in area size to mobility or modification / # of mammal species

```{r}
sig_neg_area_mammals <- results %>% 
                        filter(sig_code %in% c("high_int", "sig_add"),     # significance
                               Estimate < 0,                               # neg response
                               response %in% c("area_ghm", "area_sg"),     # area landscape modification OR human mobility
                               taxa %in% c("mammals", "raccoon", "cougar"))

n_sig_neg_area_mammals <- n_distinct(sig_neg_area_mammals$species)

s4_val <- round(((n_sig_neg_area_mammals/n_mammal_spp) * 100), 0)

s4_output <- print(paste0("Both human presence and landscape modification restricted the amount of area used by ", s4_val, "% of mammal species."))
```

Statement 5: # of bird species with significant NEGATIVE response in area size to mobility / # of bird species

```{r}
sig_neg_area_birds <- results %>% 
                      filter(sig_code %in% c("high_int", "sig_add"), # significance
                             Estimate < 0,                           # neg response
                             response == "area_sg",                  # area human presence ONLY
                             taxa %in% c("birds", "curlew"))

n_sig_neg_area_birds <- n_distinct(sig_neg_area_birds$species)

s5_val <- round(((n_sig_neg_area_birds/n_bird_spp) * 100), 0)

s5_output <- print(paste0("The dynamic presence of humans contracted the amount of area used by ", s5_val, "% of bird species."))

```
